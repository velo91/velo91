server {
  listen 80;
  listen [::]:80;
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  #{{ssl_certificate_key}}
  #{{ssl_certificate}}
  ssl_stapling off;
  ssl_stapling_verify off;
  ssl_certificate_key /root/.acme.sh/mysite.com/mysite.com.key;
  ssl_certificate /root/.acme.sh/mysite.com/fullchain.cer;
  ssl_dhparam /etc/nginx/ssl/dhparams.pem;
  server_name moodle.mysite.com;
  {{root}}
  
  # START WAF INTERNAL
  include /etc/nginx/blokir-ip-subnet.conf;
  #include /etc/nginx/blokir-pola-request.conf; # GAK COCOK KARENA AKAN BANYAK 404 KETIKA REQUEST MOD
  include /etc/nginx/blokir-user-agent.conf;
  location ~ ^/(wp-includes|wp-content|wp-admin)/ { return 403; } # karena bukan wordpress
  include /etc/nginx/custom-errorpage.conf;
  # END WAF INTERNAL

  #{{nginx_access_log}}
  #{{nginx_error_log}}
  #access_log off;
  #error_log off;
  # START PUSATKAN LOG DI 1 TEMPAT
  access_log /var/www/logs/nginx/access.log main if=$loggable;
  error_log /var/www/logs/nginx/error.log error;
  # END PUSATKAN LOG DI 1 TEMPAT

  if ($scheme != "https") {
    rewrite ^ https://$host$uri permanent;
  }

  {{settings}}

  rewrite ^/(.*.php)(/)(.*)$ /$1?file=/$3 last;

  try_files $uri $uri/ /index.php?$args;
  index index.php index.html;

  # Blokir akses ke file travis
  location = /.travis.yml {
    deny all;
  }

  # Routing Engine
  location / {
    try_files $uri $uri/ /r.php;
  }

  # Tangani file plugin Moodle seperti pluginfile.php
  location ~ ^/pluginfile\.php(/.*)?$ {
    try_files $uri =404;
    include fastcgi_params;
    fastcgi_pass 127.0.0.1:{{php_fpm_port}};
    fastcgi_param SCRIPT_FILENAME $document_root/pluginfile.php;
    fastcgi_param PATH_INFO $1;
  }

  # Tangani file draft editor (draftfile.php)
  location ~ ^/draftfile\.php(/.*)?$ {
    try_files $uri =404;
    include fastcgi_params;
    fastcgi_pass 127.0.0.1:{{php_fpm_port}};
    fastcgi_param SCRIPT_FILENAME $document_root/draftfile.php;
    fastcgi_param PATH_INFO $1;
  }

  # Tangani file PHP umum (index.php, login/index.php, dsb)
  location ~ \.php$ {
    limit_req zone=limit burst=100 nodelay; # LAYANAN INTERNAL 1 IP RAME-RAME PAKAI burst=100 nodelay; LAYANAN PUBLIC PAKAI burst=10 delay=5;
    include fastcgi_params;
    fastcgi_intercept_errors on;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    try_files $uri =404;
    fastcgi_read_timeout 3600;
    fastcgi_send_timeout 3600;
    fastcgi_param HTTPS $fastcgi_https;
    fastcgi_pass 127.0.0.1:{{php_fpm_port}};
    fastcgi_param PHP_VALUE "{{php_settings}}";
  }

  # Hide all dot files but allow "Well-Known URIs" as per RFC 5785
  location ~ /\.(?!well-known).* {
    return 404;
  }
 
  # This should be after the php fpm rule and very close to the last nginx ruleset.
  # Don't allow direct access to various internal files. See MDL-69333
  location ~ (/vendor/|/node_modules/|composer\.json|/readme|/README|readme\.txt|/upgrade\.txt|/UPGRADING\.md|db/install\.xml|/fixtures/|/behat/|phpunit\.xml|\.lock|environment\.xml) {
    deny all;
    return 404;
  }

  # Caching header untuk file statis
  location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|woff2|eot|mp4|ogg|ogv|webm|webp|zip|swf)$ {
    add_header Access-Control-Allow-Origin "*";
    add_header Cache-Control "public";
    expires max;
    access_log off;
  }

  # pastikan kamu tidak pakai ini karena bisa mengacaukan PATH_INFO, terutama untuk pluginfile.php
  #if (-f $request_filename) {
  #  break;
  #}
}
