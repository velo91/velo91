### INSTALL CROWDSEC
# disable fail2ban
sudo systemctl stop fail2ban
sudo systemctl disable fail2ban
sudo systemctl disable --now fail2ban
# download & install crowdsec
curl -s https://install.crowdsec.net | sudo sh
sudo apt install crowdsec crowdsec-firewall-bouncer-iptables
# change port 8080 to 7777
sudo nano /etc/crowdsec/config.yaml
sudo nano /etc/crowdsec/local_api_credentials.yaml
sudo nano /etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yaml
sudo systemctl restart crowdsec && sudo systemctl restart crowdsec-firewall-bouncer
sudo systemctl status crowdsec && sudo systemctl status crowdsec-firewall-bouncer
# make sure no error:
sudo journalctl -u crowdsec -n 20
sudo cscli parsers list
sudo cscli scenarios list
sudo cscli bouncers list
sudo cscli collections list
sudo cscli metrics
sudo cscli decisions list

### ADD THIRD PARTY BLOCKLIST
# create account at https://app.crowdsec.net
# once logged in, find the Enroll Command button, and paste it into your terminal:
sudo cscli console enroll -e context [your_engine_id]
# after a moment, a notification will appear on the website. click "Accept" enroll.
# your server will be linked and appear on the dashboard. reload the Crowdsec service.
sudo cscli console enable manual
sudo systemctl restart crowdsec && sudo systemctl restart crowdsec-firewall-bouncer
# go to the Blocklist Catalog to browse what's available.
# https://app.crowdsec.net/blocklists/search?pricingTiers=%5B%22free%22%5D&page=1
# you can add up to 3 on a free account. here are my recommended blocklists for newcomers:
Firehol cruzit.com list
Firehol BotScout list
Firehol greensnow.co list
# to add one, click Subscribe. choose Ban as the default action to take.

### CREATE WHITELIST WITH s02-enrich
nano /etc/crowdsec/parsers/s02-enrich/mywhitelists.yaml
==================
name: my/whitelist
description: "Custom whitelist IP agar tidak dianalisis"
whitelist:
  reason: "trusted ip"
  ip:
    # ip localhost
    - "127.0.0.0"
    # ip localhost
    - "127.0.0.1"
    # ip A
    - "X.X.X.X"
    # ip B
    - "X.X.X.X"
    # ip C
    - "X.X.X.X"
==================
sudo systemctl reload crowdsec
sudo cscli parsers list | grep whitelist

### USEFUL COMMAND
# ip
sudo cscli decisions add --reason "permanent malicious ip" --duration 1000d --ip <IP>
sudo cscli decisions list --scope ip --value <IP>
sudo cscli decisions list --ip <IP>
sudo cscli decisions delete --ip <IP>
# range (subnet)
sudo cscli decisions add --reason "permanent malicious subnet" --duration 1000d --range <SUBNET.0/24>
sudo cscli decisions list --scope range --value <SUBNET.0/24>
sudo cscli decisions list --range <SUBNET.0/24>
sudo cscli decisions delete --range <SUBNET.0/24>
# ssh scenario
sudo cscli decisions list --scenario crowdsecurity/ssh-bf
sudo cscli decisions list | grep ssh
sudo cscli scenarios list | grep ssh
sudo cscli decisions add --reason "manual ssh brute force" --scenario crowdsecurity/ssh-bf --duration 4h --ip <IP>
sudo cscli decisions list --ip <IP>
sudo cscli decisions delete --ip <IP>

### CRON JOB
# autoblock naughty IP range (not Indonesia/Google) every 2 minute
# > untuk overwrite, >> untuk append
*/2 * * * * /usr/bin/python3 /var/www/logs/check_log_error_ipinfo_crowdsec.py > /var/www/logs/ipinfo_error.log 2>&1 && /usr/bin/python3 /var/www/logs/check_log_access_ipinfo_crowdsec.py > /var/www/logs/ipinfo_access.log

### SHOW LAST LOG NGINX + IPINFO + CROWDSEC (NO AUTORELOAD)
clear && cat /var/www/logs/ipinfo_error.log && cat /var/www/logs/ipinfo_access.log

### WATCH LAST LOG NGINX + IPINFO + CROWDSEC (AUTORELOAD EVERY 10 SECONDS)
watch -n 10 'cat /var/www/logs/ipinfo_error.log /var/www/logs/ipinfo_access.log'

### BOUNCER MULTI SERVER
Tujuan:
Server A: Menjadi sumber utama (LAPI), tempat semua decision tercatat.
Server B: Tetap mendeteksi log sendiri, dan juga menyalin list dari Server A dan memblokir IP yang sama.
Asumsi:
Port 7777 di Server A sudah terbuka dan bisa diakses dari Server B
CrowdSec dan bouncer firewall sudah terpasang di Server A & B
Kekurangan:
1) Saat kamu mengubah listen_uri menjadi 0.0.0.0:7777 maka kamu mengubah LAPI (Local API) menjadi terbuka ke publik (bind ke semua interface).
CrowdSec agent (yang jalan di server yang sama) sekarang mengakses LAPI seolah-olah "remote", dan tidak lagi mengaktifkan enrichment (seperti ASN/Negara/Org).
Karena fitur enrichment hanya aktif kalau agent lokal bicara ke LAPI via localhost.
Jadi saat menampilkan list decision maka tidak akan ada lagi info Country dan ASN.
2) Waktu bantime di server B tetap maksimal 24 hari, sekalipun di server A lebih dari itu. Kecuali server B reboot, maka waktu bantime akan reset jadi 24 hari lagi.
#
# di Server A: Buat API Key untuk Server B
sudo cscli bouncers add server-b
# simpan key yang tampil untuk digunakan di server B nanti.
#
# di Server A: Pastikan LAPI bind ke 0.0.0.0
sudo nano /etc/crowdsec/config.yaml
# edit listen_uri
    listen_uri: 0.0.0.0:7777
# restart CrowdSec
sudo systemctl restart crowdsec
# cek apakah sudah listen di semua IP:
sudo ss -ltnp | grep 7777
# harus terlihat seperti:
LISTEN 0 4096 0.0.0.0:7777 ...
atau
LISTEN 0 4096 *:7777 ...
#
# di Server A: Pastikan firewall izinkan port 7777
sudo ufw allow 7777/tcp
#
# di Server B: Test koneksi ke Server A pakai telnet
telnet [IP_SERVER_A] 7777
# kalau berhasil, muncul Escape character is '^]'. tinggal tekan Ctrl + ] lalu ketik quit
#
# di Server B: Test koneksi ke Server A pakai curl yang disertai API Key
curl -H "X-Api-Key: <API_KEY_DARI_SERVER_A>" http://<IP-SERVER-A>:7777/v1/decisions
# jika berhasil, akan muncul data JSON list IP yang diblokir
#
# di Server B: Buat file konfigurasi bouncer
sudo nano /etc/crowdsec/bouncers/from-server-a.yaml
	api_url: http://[IP_SERVER_A]:7777/
	api_key: "[API_KEY_DARI_SERVER_A]"
	update_frequency: 30s
	log_level: info
	mode: iptables
#
# jalankan bouncer pakai config tadi
sudo crowdsec-firewall-bouncer -c /etc/crowdsec/bouncers/from-server-a.yaml -t
# kalau terlalu banyak error, stop dulu:
sudo systemctl stop crowdsec-firewall-bouncer
# kemudian coba lagi tanpa -t
sudo crowdsec-firewall-bouncer -c /etc/crowdsec/bouncers/from-server-a.yaml
# kalau sudah ada tulisan:
	INFO[0002] Using API key auth                           
	INFO[0002] Processing new and deleted decisions . . . 
# artinya koneksi ke server A sukses, dan IP-IP dari server A sudah mulai diterapkan di iptables server B.
# bisa cek di server B dengan:
sudo iptables -L CROWDSEC_CHAIN -v -n
sudo ipset list
sudo ipset list crowdsec-blacklists-1
# menjalankan otomatis saat boot:
sudo systemctl enable crowdsec-firewall-bouncer
# Server B kalau pakai "sudo cscli decisions list" tidak masuk list blokir dari Server A karena perintah ini cuma tampilin blokir lokal
# kalau mau lihat list blokir dari Server A pakai sudo ipset list
sudo iptables -L CROWDSEC_CHAIN -v -n
sudo ipset list
sudo ipset list crowdsec-blacklists-1
#
# aktifkan monit untuk bouncer ini
# pastikan monit sudah terinstall
# buat file konfigurasi baru
nano conf-enabled/crowdsec-from-server002
	check process crowdsec_from_server002
	  matching "from-server002.yaml"
	  start program = "/usr/bin/crowdsec-firewall-bouncer -c /etc/crowdsec/bouncers/from-server002.yaml &"
	  stop program  = "/usr/bin/pkill -f 'from-server002.yaml'"
sudo monit -t
sudo monit reload
sudo monit status crowdsec_from_server002
# tidak apa-apa jika statusnya "Execution failed | Does not exist" karena tujuan kita pake monit hanya untuk memicu perintah start program dengan parameter '&' bisa berjalan bukan supaya selalu berjalan setiap saat
# bahkan tidak apa-apa jika tidak ada hasil di:
	ps aux | grep from-server002.yaml
# yang penting bisa /* CrowdSec: cscli */ nampak di:
	sudo iptables -L CROWDSEC_CHAIN -v -n
# kalau belum tersedia, tunggu aja sampai muncul /* CrowdSec: cscli */

### UPDATE KOMPONEN CROWDSEC
sudo cscli hub update
sudo cscli collections upgrade --all
sudo cscli parsers upgrade --all
sudo cscli postoverflows upgrade --all
sudo cscli scenarios upgrade --all
# reload agar config baru aktif
sudo systemctl reload crowdsec
sudo systemctl status crowdsec
